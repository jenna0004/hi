<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Snake Game</title>
    <style>
        canvas {
            display: block;
            margin: 0 auto;
            background-color: #000;
        }
    </style>
</head>
<body>
    <canvas id="gameCanvas" width="400" height="400"></canvas>
    <script src="snake.js"></script>
</body>
</html>
const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

// Constants
const gridSize = 20;
const canvasSize = 400;
const snakeColor = '#00FF00';
const foodColor = '#FF0000';

// Game state
let snake = [{ x: 200, y: 200 }];
let direction = { x: 0, y: 0 };
let food = getRandomFoodPosition();
let score = 0;

function getRandomFoodPosition() {
    const randomX = Math.floor(Math.random() * canvasSize / gridSize) * gridSize;
    const randomY = Math.floor(Math.random() * canvasSize / gridSize) * gridSize;
    return { x: randomX, y: randomY };
}

function drawSegment(segment, color) {
    ctx.fillStyle = color;
    ctx.fillRect(segment.x, segment.y, gridSize, gridSize);
}

function drawSnake() {
    snake.forEach(segment => drawSegment(segment, snakeColor));
}

function drawFood() {
    drawSegment(food, foodColor);
}

function updateSnake() {
    const newHead = { x: snake[0].x + direction.x * gridSize, y: snake[0].y + direction.y * gridSize };

    // Check if the snake eats the food
    if (newHead.x === food.x && newHead.y === food.y) {
        food = getRandomFoodPosition();
        score += 10;
    } else {
        snake.pop();
    }

    // Check if the snake runs into the wall or itself
    if (newHead.x < 0 || newHead.x >= canvasSize || newHead.y < 0 || newHead.y >= canvasSize || snake.some(segment => segment.x === newHead.x && segment.y === newHead.y)) {
        alert(`Game Over! Your score: ${score}`);
        snake = [{ x: 200, y: 200 }];
        direction = { x: 0, y: 0 };
        score = 0;
        food = getRandomFoodPosition();
    }

    // Add the new head to the snake
    snake.unshift(newHead);
}

function handleKeyDown(event) {
    switch (event.key) {
        case 'ArrowUp':
            if (direction.y === 0) direction = { x: 0, y: -1 };
            break;
        case 'ArrowDown':
            if (direction.y === 0) direction = { x: 0, y: 1 };
            break;
        case 'ArrowLeft':
            if (direction.x === 0) direction = { x: -1, y: 0 };
            break;
        case 'ArrowRight':
            if (direction.x === 0) direction = { x: 1, y: 0 };
            break;
    }
}

function gameLoop() {
    ctx.clearRect(0, 0, canvasSize, canvasSize);
    drawFood();
    drawSnake();
    updateSnake();
}

document.addEventListener('keydown', handleKeyDown);
setInterval(gameLoop, 100);
